@model ITSSelfRunning.Models.ActivityViewModel

@{
    ViewData["Title"] = "CreateTraining";
}

<h2>CreateTraining</h2>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateTraining">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ActivityName" class="control-label"></label>
                <input asp-for="ActivityName" class="form-control" />
                <span asp-validation-for="ActivityName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location" class="control-label"></label>
                <input asp-for="Location" class="form-control" />
                <span asp-validation-for="Location" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Activity" asp-action="Index">Back to List</a>
</div>

@section  scripts{

    @*<script>

        var location = document.getElementById("location");

        var geocoder = new google.maps.Geocoder;

        geocoder.geocode({ 'location': { lat: position.coords.latitude, lng: position.coords.longitude } }, function (results, status) {
            if (status === 'OK') {
                if (results[0]) {
                    location.value = results[0].formatted_address;
                } else {
                    window.alert('No results found');
                }
            } else {
                window.alert('Geocoder failed due to: ' + status);
            }
        });


    </script>*@

}

